{"version":3,"sources":["components/common/GridCard.js","components/Dashboard.js","components/style/Dashboard.style.js","utils.js","redux/reducers/forms.js","components/forms/FormBase.js","components/common/DropdownMenu.js","components/forms/ConstructorForm.js","components/forms/results/MintResult.js","redux/selectors.js","components/FormManager.js","components/style/FormManager.style.js","withMuiRoot.js","components/App.js","components/style/App.style.js","components/common/EthereumIcon.js","components/Web3Gatekeeper.js","serviceWorker.js","redux/reducers/graphs.js","redux/reducers/root.js","redux/sagas/forms.js","redux/configureStore.js","index.js"],"names":["GridCard","classes","this","props","react_default","a","createElement","Grid_default","item","key","sm","md","lg","index_es","component","link","Card_default","className","card","CardMedia_default","Object","assign","cardMedia","media","CardContent_default","cardContent","Typography_default","gutterBottom","variant","heading","description","cardActions","Component","mintLink","Link","to","testLink","Dashboard","react","CssBaseline_default","heroUnit","heroContent","align","color","paragraph","style","marginBottom","classNames","layout","cardGrid","container","spacing","GridCard_GridCard","image","process","title","height","withStyles","theme","icon","marginRight","unit","backgroundColor","palette","background","paper","maxWidth","margin","padding","concat","defineProperty","width","marginLeft","breakpoints","up","display","flexDirection","flexGrow","ROUTES","home","actions","mint","ACTIONS","STORE_DEPLOYMENT_RESULT","CLEAR_DEPLOYMENT_RESULT","LOG_ERROR","CLEAR_ERRORS","initialState","deploymentResult","errors","FormBase","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","id","event","target","setState","fieldValues","objectSpread","state","value","handleUnmount","step","DropdownMenu","button","anchorEl","selectedIndex","handleOpen","currentTarget","handleClose","handleSelect","index","selectAction","dataset","itemid","getMenuItems","menuItemData","map","MenuItem_default","onClick","data-itemid","selected","name","items","root","List_default","ListItem_default","aria-haspopup","aria-controls","aria-label","menuTitle","ListItemText_default","primary","secondary","placeholder","Menu_default","open","Boolean","onClose","ConstructorForm","handleReset","selectedMenuItem","handleMenuSelect","handleDeploy","preventDefault","deployContract","constructorNodes","inputs","inputNode","order","handleNext","getFormFields","values","node","xs","TextField_default","required","label","str","charAt","toUpperCase","slice","onChange","fullWidth","common_DropdownMenu","getMenuItemData","getButtons","nodes","data","n","contractName","sort","b","propTypes","PropTypes","object","isRequired","func","MintResult","getResultJsx","error","lib","text","address","cursor","selectConstructorNodes","createSelector","graphs","contracts","contractGraphs","entries","reduce","acc","_ref","_ref2","slicedToArray","graph","inputNodes","constructorNodeId","forms","numSteps","labels","components","ConstructorForm_ConstructorForm","MintResult_MintResult","FormManager","currentStep","handleBack","saveChildFieldValues","childFieldValues","getActiveChildProps","workflow","finalStepName","getButtonComponents","includes","submitHandler","buttons","Button_default","prevProps","location","pathname","clearDeploymentResult","_getManagerValues","currentPath","out","matchPath","exact","strict","path","Error","getManagerValues","Prompt","message","Paper_default","Stepper_default","activeStep","stepper","Step_default","StepLabel_default","connect","dispatch","params","w3sActions","deploy","type","marginTop","justifyContent","createMuiTheme","main","light","dark","typography","useNextVariants","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","overrides","MuiListItemText","paddingLeft","MuiDrawer","docked","withMuiRoot","styles","App","window","ethereum","on","accounts","reload","networkId","getWeb3","BrowserRouter","AppBar_default","position","appBar","Toolbar_default","textDecoration","noWrap","Switch","Route","Redirect","from","render","components_FormManager","footer","web3","zIndex","largeIcon","menuButton","menuButtonHidden","appBarSpacer","mixins","toolbar","content","overflow","listItemText","EthereumIcon","viewBox","version","xmlns","xmlnsXlink","d","stroke","strokeWidth","fill","fillRule","transform","opacity","points","containerStyle","top","buttonStyle","alignSelf","Web3Gatekeeper","handleConnect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","enable","sent","t0","console","enableFailed","abrupt","length","warn","web3Enabled","stop","_x","apply","arguments","ethereumInjected","isMetaMask","selectedAddress","children","EthereumIcon_EthereumIcon","Fab_default","size","withRouter","hostname","match","SET_CONTRACT_GRAPH","reducer","combineReducers","w3sReducers","undefined","action","result","w3sInitialState","graphsInitialState","formsInitialState","deploymentResultSaga","sagas","takeLeading","DEPLOYMENT_SUCCESS","DEPLOYMENT_FAILURE","_context2","put","_marked2","rootSaga","loggerMiddleware","createLogger","sagaMiddleware","createSagaMiddleWare","enhancer","compose","applyMiddleware","all","toConsumableArray","web3Sagas","formsSagas","configureStore_marked","forEach","c","addInitialContractType","types","t","artifact","ContractGraph","store","createStore","runSaga","run","ReactDOM","es","basename","components_Web3Gatekeeper","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d0f8281.chunk.js","sourcesContent":["\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n// import classNames from 'classnames'\n// import Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\n// import CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { CardActionArea } from '@material-ui/core'\n\nexport default class GridCard extends Component {\n\n  render () {\n\n    const { classes } = this.props\n\n    return (\n      <Grid item key={this.props.key || null} sm={6} md={4} lg={3}>\n          <CardActionArea component={this.props.link || null}>\n        <Card className={classes.card}>\n            <CardMedia\n              className={classes.cardMedia}\n              {...this.props.media}\n            />\n            <CardContent className={classes.cardContent}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {this.props.heading}\n              </Typography>\n              <Typography>\n                {this.props.description}\n              </Typography>\n            </CardContent>\n            {/* <CardActions> // TODO: Delete or add props for these\n              <Button size=\"small\" color=\"primary\">\n                View\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                Edit\n              </Button>\n            </CardActions> */}\n            {\n              this.props.cardActions || null\n            }\n        </Card>\n          </CardActionArea>\n      </Grid>\n    )\n  }\n}\n\nGridCard.propTypes = {\n  classes: PropTypes.object,\n  key: PropTypes.string,\n  component: PropTypes.object,\n  media: PropTypes.object,\n  link: PropTypes.func,\n  cardActions: PropTypes.object,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n}\n","\n/**\n * Courtesy:\n * https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/page-layout-examples/album\n */\n\nimport React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport GridCard from './common/GridCard'\n\nimport styles from './style/Dashboard.style'\n\n// TODO:Delete placeholder image\n// eslint-disable-next-line\nconst defaultImage = 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E'\n\nconst mintLink = props => <Link to=\"/actions/mint\" {...props} />\nconst testLink = props => <Link to=\"/\" {...props} />\n\nclass Dashboard extends Component {\n\n  render () {\n\n    const { classes } = this.props\n\n    return (\n      <Fragment>\n        <CssBaseline />\n        <main>\n          <div className={classes.heroUnit}>\n            <div className={classes.heroContent}>\n              <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Welcome to the Future of Fundraising\n              </Typography>\n              <Typography\n                variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph\n                style={{marginBottom: 0}}\n              >\n                Select an action below.\n              </Typography>\n            </div>\n          </div>\n          <div className={classNames(classes.layout, classes.cardGrid)}>\n            <Grid container spacing={40}>\n              {/* TODO: make all GridCards of uniform size (defined by internal CardMedia component) */}\n              <GridCard\n                classes={classes}\n                link={mintLink}\n                heading=\"Mint\"\n                description=\"Create a fundraising token.\"\n                media={{\n                  component: 'img',\n                  image: process.env.PUBLIC_URL + 'static/ETHEREUM-ICON_Black_small.png',\n                  title: 'Mint',\n                }}\n              />\n              <GridCard\n                classes={classes}\n                link={testLink}\n                heading=\"Test\"\n                description=\"Lorem ipsum.\"\n                media={{\n                  component: 'img',\n                  image: defaultImage,\n                  title: 'Lorem Ipsum',\n                  height: 245,\n                }}\n              />\n            </Grid>\n          </div>\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Dashboard)\n","\nexport default theme => ({\n  icon: {\n    marginRight: theme.spacing.unit * 2,\n  },\n  heroUnit: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  heroContent: {\n    maxWidth: 600,\n    margin: '0 auto',\n    padding: `${theme.spacing.unit * 4}px 0 ${theme.spacing.unit * 4}px`,\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`,\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n})\n","\nexport const ROUTES = {\n  home: '/',\n  actions: {\n    mint: '/actions/mint',\n  },\n}\n\nexport function capitalize (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n","\nconst ACTIONS = {\n  STORE_DEPLOYMENT_RESULT: 'FORMS:STORE_DEPLOYMENT_RESULT',\n  CLEAR_DEPLOYMENT_RESULT: 'FORMS:CLEAR_DEPLOYMENT_RESULT',\n  LOG_ERROR: 'FORMS:LOG_ERROR',\n  CLEAR_ERRORS: 'FORMS:CLEAR_ERRORS',\n}\n\nconst initialState = {\n\n  deploymentResult: null,\n\n  errors: [],\n}\n\nexport {\n  ACTIONS,\n  initialState,\n  getStoreDeploymentResultAction as storeDeploymentResult,\n  getClearDeploymentResultAction as clearDeploymentResult,\n}\n\n/**\n * Reducer\n */\n\nexport default function reducer (state = initialState, action) {\n\n  switch (action.type) {\n\n    case ACTIONS.STORE_DEPLOYMENT_RESULT:\n      return {\n        ...state,\n        deploymentResult: action.result,\n      }\n\n    case ACTIONS.CLEAR_DEPLOYMENT_RESULT:\n      return {\n        ...state,\n        deploymentResult: null,\n      }\n\n    case ACTIONS.LOG_ERROR:\n      return {\n        ...state,\n        errors: state.errors.concat(action.error),\n      }\n\n    case ACTIONS.CLEAR_ERRORS:\n      return {\n        ...state,\n        errors: [],\n      }\n\n    default:\n      return state\n  }\n}\n\n/**\n * Action creators\n */\n\n/**\n * Stores the deployment result.\n * @param {object} result the deployment result\n */\nfunction getStoreDeploymentResultAction (result) {\n  return {\n    type: ACTIONS.STORE_DEPLOYMENT_RESULT,\n    result,\n  }\n}\n\n/**\n * Clears the deployment result.\n */\nfunction getClearDeploymentResultAction () {\n  return { type: ACTIONS.CLEAR_DEPLOYMENT_RESULT }\n}\n","\nimport { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * All action forms must extend this base class.\n */\nexport default class FormBase extends Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      fieldValues: props.fieldValues || {},\n    }\n  }\n\n  componentWillUnmount () {\n    this.props.handleUnmount(this.props.step, this.state.fieldValues)\n  }\n\n  /**\n   * Stores input in component state.\n   * @param {string} id input field id\n   */\n  handleInputChange = id => event => {\n\n    const target = event.target\n    // const value = target.type === 'checkbox' ? target.checked : target.value\n    // TODO: handle checkboxes and radio buttons\n\n    this.setState({\n      fieldValues: {\n        ...this.state.fieldValues,\n        [id]: target.value,\n      },\n    })\n  }\n\n  render () {\n    return null\n  }\n}\n\nFormBase.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleUnmount: PropTypes.func.isRequired,\n  fieldValues: PropTypes.object,\n  step: PropTypes.number.isRequired,\n}\n","\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n})\n\n/**\n * Simple dropdown menu, courtesy:\n * https://github.com/mui-org/material-ui/tree/master/docs/src/pages/demos/menus/SimpleMenu.js\n *\n * @extends {Component}\n */\nclass DropdownMenu extends Component {\n\n  button = null\n\n  state = {\n    anchorEl: null,\n    selectedIndex: null,\n  }\n\n  handleOpen = event => {\n    this.setState({ anchorEl: event.currentTarget })\n  }\n\n  handleClose = event => {\n    this.setState({ anchorEl: null })\n  }\n\n  handleSelect = (event, index) => {\n\n    if (this.props.selectAction) {\n      this.props.selectAction(event.target.dataset.itemid)\n    }\n    this.setState({ selectedIndex: index, anchorEl: null })\n  }\n\n  getMenuItems = () => {\n\n    return this.props.menuItemData.map((item, index) => {\n      return (\n        <MenuItem\n          onClick={event => this.handleSelect(event, index)}\n          // data-itemid is a HTML data attribute because MenuItem doesn't\n          // accept non-DOM element props\n          data-itemid={item.id}\n          key={item.id}\n          selected={index === this.state.selectedIndex}\n        >\n          {item.name}\n        </MenuItem>\n      )\n    })\n  }\n\n  render () {\n\n    const { anchorEl } = this.state\n    const items = this.props.menuItemData\n\n    return (\n      <div className={this.props.classes.root}>\n        <List>\n          <ListItem\n            button\n            aria-haspopup=\"true\"\n            aria-controls=\"lock-menu\"\n            aria-label={this.props.menuTitle}\n            onClick={this.handleOpen}\n          >\n            <ListItemText\n              primary={this.props.menuTitle}\n              secondary={\n                this.state.selectedIndex !== null\n                ? items[this.state.selectedIndex].name\n                : this.props.placeholder || ''\n              }\n            />\n          </ListItem>\n        </List>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          {this.getMenuItems()}\n        </Menu>\n      </div>\n    )\n  }\n}\n\n// className={this.props.classes.menu}\n\nDropdownMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n  menuTitle: PropTypes.string.isRequired,\n  menuItemData: PropTypes.array.isRequired,\n  selectAction: PropTypes.func,\n  placeholder: PropTypes.string,\n}\n\nexport default withStyles(styles)(DropdownMenu)\n","\nimport React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n\nimport FormBase from './FormBase'\nimport DropdownMenu from '../common/DropdownMenu'\n\nimport { capitalize } from '../../utils'\n\nexport default class ConstructorForm extends FormBase {\n\n  constructor (props) {\n    super(props)\n    this.state.selectedMenuItem = null\n  }\n\n  handleReset = () => {\n    this.setState({\n      fieldValues: this.props.fieldValues || {},\n      selectedMenuItem: null,\n    })\n  }\n\n  handleMenuSelect = id => {\n    this.setState({\n      ...this.state,\n      selectedMenuItem: id,\n    })\n  }\n\n  handleDeploy = event => {\n\n    event.preventDefault()\n\n    if (!this.state.selectedMenuItem) return\n\n    this.props.deployContract(\n      this.state.selectedMenuItem,\n      this.props.constructorNodes[this.state.selectedMenuItem].inputs\n        .map(inputNode => {\n          return {\n            order: inputNode.order,\n            value: this.state.fieldValues[inputNode.id],\n          }\n        })\n    )\n    this.props.handleNext()\n  }\n\n  getFormFields = () => {\n    if (!this.state.selectedMenuItem) return null\n    return Object.values(\n      this.props.constructorNodes[this.state.selectedMenuItem].inputs\n    ).map(node =>\n      <Grid item xs={12} sm={6} key={node.id}>\n        <TextField\n          required\n          id={node.id}\n          name={node.name}\n          label={capitalize(node.name)}\n          value={this.state.fieldValues[node.id] || ''}\n          onChange={this.handleInputChange(node.id)}\n          fullWidth\n        />\n      </Grid>\n    )\n  }\n\n  render () {\n\n    const { classes } = this.props\n\n    return (\n      <Fragment>\n        <DropdownMenu\n          classes={{ root: classes.root }}\n          menuItemData={\n            getMenuItemData(this.props.constructorNodes)\n          }\n          menuTitle=\"Token\"\n          placeholder=\"Please select a token\"\n          selectAction={this.handleMenuSelect} />\n          <Grid container spacing={24}>\n            {this.getFormFields()}\n          </Grid>\n          {this.props.getButtons(this.handleDeploy)}\n      </Fragment>\n    )\n  }\n}\n\nfunction getMenuItemData (nodes) {\n\n  const data = Object.values(nodes).map(n => {\n    return {\n      id: n.id,\n      name: n.contractName,\n    }\n  })\n\n  data.sort((a, b) => {\n    if (a.name === b.name) return 0 // sanity\n    return a.name < b.name ? -1 : 1\n  })\n\n  return data\n}\n\nConstructorForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  constructorNodes: PropTypes.object.isRequired,\n  getButtons: PropTypes.func.isRequired,\n  deployContract: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n}\n","\nimport React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Typography } from '@material-ui/core'\n\nexport default class MintResult extends Component {\n\n  getResultJsx = () => {\n\n    if (this.props.deploymentResult.error) {\n      return (\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {\n            'We\\'re sorry, your deployment appears to have failed.\\n' +\n            'Please see MetaMask for details.'\n          }\n        </Typography>\n      )\n    }\n    return (\n      <Fragment>\n        <Typography variant=\"h5\" align=\"center\" gutterBottom>\n          Success!\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\">\n          Your token was deployed at the following address:\n        </Typography>\n        <CopyToClipboard\n          text={this.props.deploymentResult.data.address}\n          style={{ cursor: 'pointer'}}\n        >\n          <Typography variant=\"subtitle1\" align=\"center\" gutterBottom>\n            {this.props.deploymentResult.data.address}\n          </Typography>\n        </CopyToClipboard>\n      </Fragment>\n    )\n  }\n\n  render () {\n    return (\n      <Fragment>\n        {\n          !this.props.deploymentResult\n          ? <Typography variant=\"h5\" align=\"center\" gutterBottom>\n              Please wait while your token is created...\n            </Typography>\n          : this.getResultJsx()\n        }\n      </Fragment>\n    )\n  }\n}\n\nMintResult.propTypes = {\n  classes: PropTypes.object,\n  deploymentResult: PropTypes.object,\n}\n","\nimport { createSelector } from 'reselect'\n\nconst selectContractGraphs = state => state.graphs.contracts\n\nexport const selectConstructorNodes = createSelector(\n  [selectContractGraphs],\n  (contractGraphs) =>\n    Object.entries(contractGraphs)\n      .reduce((acc, [id, graph]) => {\n        acc[id] = {\n          id,\n          contractName: graph.contractName(),\n          inputs: graph.inputNodes(graph.constructorNodeId()),\n        }\n        return acc\n      }, {})\n)\n","\n/**\n * Original component courtesy:\n * https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/page-layout-examples/checkout\n */\n\n// React and Redux\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Prompt, matchPath } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { actionCreators as w3sActions } from 'web3-sagas'\n\n// material-ui\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Paper from '@material-ui/core/Paper'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// internal imports\n\nimport { ROUTES } from '../utils'\n\n// redux\nimport { clearDeploymentResult } from '../redux/reducers/forms'\n\n// components\nimport ConstructorForm from './forms/ConstructorForm'\nimport MintResult from './forms/results/MintResult'\n\n// style\nimport styles from './style/FormManager.style'\nimport { selectConstructorNodes } from '../redux/selectors'\n\n// eslint erroneously warns about a react/display-name violation below\n// (it should only do this on component declaration)\nconst forms = {\n  mint: {\n    numSteps: 1,\n    labels: ['Create Token'],\n    components: [\n      props => <ConstructorForm key=\"0\" {...props} />, // eslint-disable-line\n      props => <MintResult key=\"final\" {...props} />, // eslint-disable-line\n    ],\n  },\n}\n\n/**\n * Used to generate certain values in render() below.\n * @param {string} currentPath the current router path\n */\nfunction getManagerValues (currentPath) {\n\n  const args = { exact: false, strict: false }\n  const out = {}\n\n  if (matchPath(currentPath, { ...args, path: ROUTES.actions.mint })) {\n\n    out.workflow = 'mint' // TODO: normalize, use ids\n    out.title = 'Mint'\n    out.finalStepName = 'Deploy'\n\n  } else throw new Error('Invalid URL.')\n\n  return out\n}\n\n/**\n * Connected component for managing forms. The core of the app.\n * NOTE:\n * This has a significant design-hangover from the @material-ui layout\n * example it was originally adapted from, and should be reworked from the\n * ground up before more functionality is added. Child forms need to be\n * addressed concurrently.\n *  - the big issue is communication with the manager and the forms\n *  - each child form component in a workflow should have its own route to\n *    enable the use of browser back & forward buttons\n *  - results pages are so different that they should be a sibling of this\n *    component, not a child as they are currently\n */\nclass FormManager extends Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      currentStep: 0,\n      fieldValues: {},\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    if (\n      this.props.location.pathname !== prevProps.location.pathname\n    ) this.handleReset()\n  }\n\n  componentWillUnmount () {\n    this.props.clearDeploymentResult()\n  }\n\n  /**\n   * Advances current form to next state.\n   * Must be passed to child form of last step to be used in\n   * submitHandler (see getButtonComponents).\n   */\n  handleNext = () => {\n    this.setState(state => ({\n      currentStep: state.currentStep + 1,\n    }))\n  }\n\n  handleBack = () => {\n    this.setState(state => ({\n      currentStep: state.currentStep - 1,\n    }))\n  }\n\n  handleReset = () => {\n    this.setState({\n      currentStep: 0,\n      fieldValues: {},\n    })\n  }\n\n  saveChildFieldValues = (step, childFieldValues) => {\n    if (!childFieldValues) return\n    this.setState({\n      ...this.state,\n      fieldValues: {\n        ...this.state.fieldValues,\n        [step]: childFieldValues,\n      },\n    })\n  }\n\n  /**\n   * Computes relevant props for the current active form.\n   */\n  getActiveChildProps = (step, workflow, finalStepName) => {\n\n    const props = {\n      handleUnmount: this.saveChildFieldValues,\n      classes: this.props.classes,\n      fieldValues: this.state.fieldValues[step] || null,\n      step: step,\n      getButtons: this.getButtonComponents(step, workflow, finalStepName),\n      handleNext: this.handleNext,\n    }\n\n    if (workflow === 'mint') {\n      if (step === 0) {\n        props.constructorNodes = Object.entries(this.props.constructorNodes)\n          .reduce((acc, [id, node]) => {\n            if (node.contractName.includes('ERC20')) acc[id] = node\n            return acc\n          }, {})\n        props.deployContract = this.props.deployContract\n      } else if (step === 1) {\n        props.deploymentResult = this.props.deploymentResult\n      }\n    }\n    return props\n  }\n\n  getButtonComponents = (step, workflow, finalStepName) => submitHandler => {\n  const { classes } = this.props\n  return (\n    step < forms[workflow].numSteps\n    ? (\n        <Fragment>\n          <div className={classes.buttons}>\n            {\n              step !== 0 && (\n                <Button\n                  onClick={this.handleBack}\n                  className={classes.button}\n                >\n                  Back\n                </Button>\n              )\n              }\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={\n                step === forms[workflow].numSteps - 1\n                ? submitHandler\n                : this.handleNext\n              }\n              className={classes.button}\n            >\n              {\n                step === forms[workflow].numSteps - 1\n                ? finalStepName\n                : 'Next'\n              }\n            </Button>\n          </div>\n        </Fragment>\n      )\n      : null\n    )\n  }\n\n  render () {\n\n    const { classes } = this.props\n    const { currentStep } = this.state\n    const { workflow, title, finalStepName } = getManagerValues(\n      this.props.location.pathname\n    )\n\n    return (\n      <Fragment>\n        <CssBaseline />\n        <Prompt\n          message=\"If you leave this page, you will lose your work. Are you sure you want to leave?\"\n        />\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\" gutterBottom>\n              {title}\n            </Typography>\n              {\n                // don't show Stepper on result page\n                currentStep === forms[workflow].numSteps\n                ? null\n                : <Stepper activeStep={currentStep} className={classes.stepper}>\n                    {forms[workflow].labels.map(label => (\n                      <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                      </Step>\n                    ))}\n                  </Stepper>\n              }\n            <Fragment>\n              {\n                forms[workflow].components[currentStep](\n                  this.getActiveChildProps(\n                    currentStep, workflow, finalStepName\n                  )\n                )\n              }\n            </Fragment>\n          </Paper>\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nFormManager.propTypes = {\n  classes: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  deployContract: PropTypes.func.isRequired,\n  constructorNodes: PropTypes.object.isRequired,\n  deploymentResult: PropTypes.object,\n  clearDeploymentResult: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => {\n  return {\n    // graphs\n    constructorNodes: selectConstructorNodes(state),\n    // forms\n    deploymentResult: state.forms.deploymentResult,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // contracts\n    deployContract: (id, params) =>\n      dispatch(w3sActions.contracts.deploy(id, params)),\n    // forms\n    clearDeploymentResult: () => dispatch(clearDeploymentResult()),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(FormManager))\n","\nexport default theme => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n})\n","\n/**\n * https://github.com/mui-org/material-ui/tree/master/docs/src/pages/page-layout-examples/dashboard\n */\n\nimport React from 'react'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nconst spacingUnit = 8\n\n// TODO: different palettes for testing\nconst palettes = {\n  green: {\n    primary: {\n      main: '#7cb342',\n      light: '#aee571',\n      dark: '#4b830d',\n    },\n    // secondary: {\n    //   main: '#ffe082',\n    //   light: '#ffffb3',\n    //   dark: '#caae53',\n    // },\n  },\n  teal: {\n    primary: {\n      main: '#00838f',\n      light: '#4fb3bf',\n      dark: '#005662',\n    },\n    secondary: {\n      main: '#ffe082',\n      light: '#ffffb3',\n      dark: '#caae53',\n    },\n  },\n}\n\n// A theme with custom primary and secondary color.\nconst theme = createMuiTheme({\n  palette: palettes.green,\n  typography: {\n    useNextVariants: true, // this can be removed with @material-ui 4.0.0\n    fontFamily: '\"Helvetica\", \"Arial\", sans-serif',\n    fontSize: 12,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n  overrides: {\n    MuiListItemText: {\n      root: {\n        paddingLeft: 0,\n      },\n    },\n    MuiDrawer: {\n      docked: {\n        width: 0,\n      },\n    },\n  },\n  spacing: {\n    unit: spacingUnit,\n  },\n})\n\nfunction withMuiRoot (Component) {\n  function WithMuiRoot (props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    )\n  }\n  return WithMuiRoot\n}\n\nexport default withMuiRoot\n\nexport {\n  spacingUnit,\n}\n","\n// general packages\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport classNames from 'classnames'\nimport { BrowserRouter as Router, Route, Redirect, Switch, Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\n// @material-ui components\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\n// @material-ui icons\n// import AttachMoneyIcon from '@material-ui/icons/AttachMoney'\n\n// redux\nimport { actionCreators as w3sActions } from 'web3-sagas'\n\n// local components\nimport Dashboard from './Dashboard'\nimport FormManager from './FormManager'\n\n// style\nimport styles from './style/App.style'\nimport withMuiRoot from '../withMuiRoot'\n\nclass App extends Component {\n\n  constructor (props) {\n\n    super(props)\n\n    // Reloads the page if Ethereum network or accounts change\n    // TODO: handle this gracefully\n    window.ethereum.on('accountsChanged', accounts => {\n      window.location.reload()\n    })\n    window.ethereum.on('networkChanged', networkId => {\n      window.location.reload()\n    })\n\n    this.props.getWeb3()\n  }\n\n  render () {\n\n    const classes = this.props.classes\n\n    return (\n      <Router>\n        <div style={{ width: '100%' }}>\n          <AppBar\n              position=\"relative\"\n              className={classNames(\n                classes.appBar\n              )}\n            >\n            <Toolbar>\n              {/* <AttachMoneyIcon className={classes.largeIcon} /> */}\n              <Link to=\"/\" style={{textDecoration: 'none'}}>\n                <Typography variant=\"h4\" color=\"default\" noWrap>\n                  TokenMinter\n                </Typography>\n              </Link>\n            </Toolbar>\n          </AppBar>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Redirect exact from=\"/actions\" to=\"/\" />\n            <Route\n              path=\"/actions/*\" render={props => <FormManager {...props} />}\n            />\n            <Route path=\"/sune\" component={() => <h2>Ayyyyyy</h2>} />\n          </Switch>\n          <footer className={classes.footer}>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              Remember\n            </Typography>\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n              Carnivorism causes cancer.\n            </Typography>\n          </footer>\n        </div>\n      </Router>\n    )\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object,\n  getWeb3: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => {\n  return {}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getWeb3: () => dispatch(w3sActions.web3.getWeb3()),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withMuiRoot(withStyles(styles)(App)))\n","\n/**\n * Courtesy:\n * https://github.com/mui-org/material-ui/tree/master/docs/src/pages/page-layout-examples/dashboard\n */\n\nexport default theme => ({\n  appBar: {\n    zIndex: 9999,\n  },\n  largeIcon: {\n    height: 42,\n    width: 42,\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  listItemText: {\n    paddingLeft: 0,\n    noWrap: true,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing.unit * 3,\n  },\n})\n","\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * Large Ethereum icon.\n * Original svg courtesy: https://github.com/coopermaruyama/react-web3/\n *\n * @extends {Component}\n */\nexport default class EthereumIcon extends Component {\n\n  render () {\n\n    return (\n      <svg width=\"100%\" height=\"100%\" position=\"relative\" viewBox=\"0 0 332 417\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <defs>\n          <path d=\"M198.610685,43.1017808 C107.24977,43.1017808 33.1017808,117.24977 33.1017808,208.610685 C33.1017808,299.971599 107.24977,374.119588 198.610685,374.119588 C289.971599,374.119588 364.119588,299.971599 364.119588,208.610685 C364.119588,117.24977 289.971599,43.1017808 198.610685,43.1017808 L198.610685,43.1017808 Z M198.610685,341.017808 C125.455749,341.017808 66.2035615,281.76562 66.2035615,208.610685 C66.2035615,177.991537 76.6306225,149.855024 94.1745663,127.511322 L279.710047,313.046803 C257.366345,330.590747 229.229832,341.017808 198.610685,341.017808 L198.610685,341.017808 Z M303.046803,289.710047 L117.511322,104.174566 C139.855024,86.6306225 167.991537,76.2035615 198.610685,76.2035615 C271.76562,76.2035615 331.017808,135.455749 331.017808,208.610685 C331.017808,239.229832 320.590747,267.366345 303.046803,289.710047 L303.046803,289.710047 Z\" id=\"path-1\"></path>\n        </defs>\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g id=\"Group\" transform=\"translate(-33.000000, 0.000000)\">\n            <g id=\"Ethereum_logo_2014\" opacity=\"0.208899457\" transform=\"translate(71.000000, 0.000000)\" fillRule=\"nonzero\">\n              <polygon id=\"Shape\" fill=\"#343434\" points=\"127.9611 0 125.1661 9.5 125.1661 285.168 127.9611 287.958 255.9231 212.32\"></polygon>\n              <polygon id=\"Shape\" fill=\"#8C8C8C\" points=\"127.962 0 0 212.32 127.962 287.959 127.962 154.158\"></polygon>\n              <polygon id=\"Shape\" fill=\"#3C3C3B\" points=\"127.9611 312.1866 126.3861 314.1066 126.3861 412.3056 127.9611 416.9066 255.9991 236.5866\"></polygon>\n              <polygon id=\"Shape\" fill=\"#8C8C8C\" points=\"127.962 416.9052 127.962 312.1852 0 236.5852\"></polygon>\n              <polygon id=\"Shape\" fill=\"#141414\" points=\"127.9611 287.9577 255.9211 212.3207 127.9611 154.1587\"></polygon>\n              <polygon id=\"Shape\" fill=\"#393939\" points=\"0.0009 212.3208 127.9609 287.9578 127.9609 154.1588\"></polygon>\n            </g>\n          </g>\n        </g>\n      </svg>\n    )\n  }\n}\n\nEthereumIcon.propTypes = {\n  message: PropTypes.string,\n}\n","\nimport React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter, Redirect } from 'react-router-dom'\n\nimport Typography from '@material-ui/core/Typography'\nimport Fab from '@material-ui/core/Fab'\n\nimport EthereumIcon from './common/EthereumIcon'\n\nconst containerStyle = {\n  position: 'absolute',\n  width: '100%',\n  top: '50%',\n  display: 'flex',\n  justifyContent: 'center',\n  flexDirection: 'column',\n}\n\nconst buttonStyle = {\n  top: '15px',\n  alignSelf: 'center',\n  color: '#ffffff',\n  backgroundColor: '#7cb342',\n}\n\n/**\n * Minimalist EIP1102-compliance solution that prevents its children from\n * rendering until the user enables web3. Also informs user whether they\n * need to install MetaMask or if the connection to MetaMask failed.\n */\nclass Web3Gatekeeper extends Component {\n\n  constructor (props) {\n\n    super(props)\n\n    this.state = {\n      ethereumInjected: false,\n      web3Enabled: false,\n      enableFailed: false,\n    }\n  }\n\n  componentDidMount () {\n\n    // only allow MetaMask for now\n    // TODO: let other dapp browsers through\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      this.setState({ ethereumInjected: true })\n    }\n\n    // if there's a selected address available, the user has already enabled\n    // web3\n    if (window.ethereum && window.ethereum.selectedAddress) {\n      this.setState({ web3Enabled: true })\n    }\n  }\n\n  render () {\n\n    if (!this.state.web3Enabled) {\n\n      return (\n        ['/', ''].includes(this.props.location.pathname)\n        ? <Fragment>\n            <EthereumIcon/>\n            <div style={containerStyle}>\n              <Typography\n                align=\"center\"\n                variant=\"h2\"\n              >\n                {\n                  !this.state.ethereumInjected\n                  ? 'Please Download MetaMask'\n                  : this.state.enableFailed\n                    ? 'Access Denied'\n                    : 'Please Connect to MetaMask'\n                }\n              </Typography>\n              {\n                this.state.enableFailed || !this.state.ethereumInjected\n                ? null\n                : <Fab\n                    size=\"large\"\n                    variant=\"extended\"\n                    style={buttonStyle}\n                    onClick={this.handleConnect}\n                  >\n                    Connect\n                  </Fab>\n              }\n            </div>\n          </Fragment>\n        : <Redirect to=\"/\"/>\n      )\n    }\n\n    return this.props.children\n  }\n\n  /**\n   * Calls window.ethereum.enable() and sets component state per result.\n   */\n  handleConnect = async (event) => {\n\n    event.preventDefault()\n\n    let accounts\n\n    try {\n      accounts = await window.ethereum.enable()\n    } catch (error) {\n      console.error(error)\n      this.setState({ enableFailed: true })\n      return\n    }\n\n    // if it somehow failed without throwing anything\n    if (!accounts || accounts.length < 1) {\n      console.error('No accounts found.')\n      this.setState({ enableFailed: true })\n      return\n    }\n\n    // exactly one account should be returned\n    if (accounts.length > 1) {\n      console.warn('More than one Web3 account found. ' +\n        'Defaulting to first account.', accounts)\n    }\n\n    this.setState({ web3Enabled: true })\n  }\n}\n\nWeb3Gatekeeper.propTypes = {\n  children: PropTypes.object,\n  location: PropTypes.object,\n}\n\nexport default withRouter(Web3Gatekeeper)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport { ContractGraph } from 'solidity-abi-graphs'\n\nconst ACTIONS = {\n  SET_CONTRACT_GRAPH: 'GRAPHS:SET_CONTRACT_GRAPH',\n  LOG_ERROR: 'GRAPHS:LOG_ERROR',\n  CLEAR_ERRORS: 'GRAPHS:CLEAR_ERRORS',\n}\n\nconst initialState = {\n\n  contracts: {\n    // id: ContractGraph, // same id as the contract artifact\n  },\n\n  errors: [],\n}\n\nexport {\n  ACTIONS,\n  initialState,\n  addInitialContractGraph,\n}\n\n/**\n * Initialization Helpers\n */\n\n/**\n * Add graph of contract type to state.\n * WARNING: Only use this when initializing app state, e.g. in configureStore.\n * @param {object} state graphs initial state\n * @param {string} id contract type id from contracts state\n * @param {object} artifact contract artifact from contracts state\n */\nfunction addInitialContractGraph (state, id, artifact) {\n  state.contracts[id] = new ContractGraph(artifact, { id })\n}\n\n/**\n * Reducer\n */\n\nexport default function reducer (state = initialState, action) {\n\n  switch (action.type) {\n\n    case ACTIONS.SET_CONTRACT_GRAPH:\n      return {\n        ...state,\n        contracts: {\n\n          ...state.contracts,\n          [action.id]: action.graph,\n        },\n      }\n\n    case ACTIONS.LOG_ERROR:\n      return {\n        ...state,\n        errors: state.errors.concat(action.error),\n      }\n\n    case ACTIONS.CLEAR_ERRORS:\n      return {\n        ...state,\n        errors: [],\n      }\n\n    default:\n      return state\n  }\n}\n\n/**\n * Action creators\n */\n\n/**\n * @param {string} id contract type id from contracts reducer\n * @param {object} artifact contract artifact from contracts reducer\n */\nfunction getSetContractGraphAction (id, artifact) { // eslint-disable-line\n  return {\n    type: ACTIONS.SET_CONTRACT_GRAPH,\n    id,\n    graph: new ContractGraph(artifact, { id }),\n  }\n}\n","\nimport { combineReducers } from 'redux'\nimport {\n  reducers as w3sReducers,\n  initialState as w3sInitialState,\n} from 'web3-sagas'\n\nimport graphsReducer, { initialState as graphsInitialState } from './graphs'\nimport formsReducer, { initialState as formsInitialState } from './forms'\n\nexport const reducer = combineReducers({\n  ...w3sReducers,\n  graphs: graphsReducer,\n  forms: formsReducer,\n})\n\nexport const initialState = {\n  ...w3sInitialState,\n  graphs: graphsInitialState,\n  forms: formsInitialState,\n}\n","\nimport { put, takeLeading } from 'redux-saga/effects'\nimport { actionNames as w3sActions } from 'web3-sagas'\n\nimport { storeDeploymentResult } from '../reducers/forms'\n\nexport const sagas = [\n  takeLeading(\n    [\n      w3sActions.contracts.DEPLOYMENT_SUCCESS,\n      w3sActions.contracts.DEPLOYMENT_FAILURE,\n    ],\n    deploymentResultSaga\n  ),\n]\n\n// for testing\nexport function * watchDeploymentResultSaga () {\n  yield takeLeading(\n    [\n      w3sActions.contracts.DEPLOYMENT_SUCCESS,\n      w3sActions.contracts.DEPLOYMENT_FAILURE,\n    ],\n    deploymentResultSaga\n  )\n}\n\nfunction * deploymentResultSaga (action) {\n  yield put(storeDeploymentResult(\n    action.error\n    ? action.error\n    : { id: action.id, data: action.data }\n  ))\n}\n","\nimport { compose, createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport createSagaMiddleWare from 'redux-saga'\nimport { contracts } from 'chain-end'\nimport { sagas as web3Sagas, addInitialContractType } from 'web3-sagas'\nimport { all } from 'redux-saga/effects'\n\nimport { reducer, initialState } from './reducers/root'\nimport { addInitialContractGraph } from './reducers/graphs'\nimport { sagas as formsSagas } from './sagas/forms'\n\nconst loggerMiddleware = createLogger()\nconst sagaMiddleware = createSagaMiddleWare()\n\n// set up enhancer\nconst enhancer = compose(\n  applyMiddleware(\n    sagaMiddleware,\n    loggerMiddleware\n  ),\n)\n\n// add initial contracts to state\nObject.values(contracts).forEach(c => {\n  addInitialContractType(initialState.contracts, c)\n})\n\n// add initial contract graphs to state\nObject.values(initialState.contracts.types).forEach(t => {\n  addInitialContractGraph(initialState.graphs, t.id, t.artifact)\n})\n\n// define root saga\nfunction * rootSaga () {\n  yield all([\n    ...web3Sagas,\n    ...formsSagas,\n  ])\n}\n\nexport default function configureStore () {\n  return {\n    ...createStore(reducer, initialState, enhancer),\n    runSaga: () => sagaMiddleware.run(rootSaga),\n  }\n}\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport './index.css'\n\nimport App from './components/App'\nimport Web3Gatekeeper from './components/Web3Gatekeeper'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './redux/configureStore'\n\nconst store = configureStore()\n\nstore.runSaga()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Web3Gatekeeper>\n        <App />\n      </Web3Gatekeeper>\n    </Router>\n  </Provider>,\ndocument.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}